:root {
    --primario: #ffc107;
    --secundario: #0097a7;
    --gris: #757575;
    --oscuro: #212121; /*Personalize property used like a variable*/
}

html {
    box-sizing: border-box;
    min-height: 100%;
    font-size: 62.5%;
}

*, *::before, *::after {
    box-sizing: inherit;
}

body {
    font-family: 'Krub', sans-serif;
    background-image: linear-gradient(120deg, #a1c4fd 0%, #c2e9fb 100%);
    min-height: 100%;
    font-size: 1.6rem;
}

h1, h2, h3 {
    margin: 0;
}

h2, h3 {
    text-align: center;
}

h3 {
    color: var(--secundario);
    font-weight: 400;
    font-size: 2.5rem;
}

p {
    font-size: 1.8rem;
    line-height: 2;
}

.site-header {
    background-color: #fff;
}

.site-header nav {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 0;
    display: flex;
    flex-direction: column;
    align-items: center;
}

@media (min-width: 768px) {
    .site-header nav {
        flex-direction: row;
        justify-content: space-between;
    }
}

.site-header nav a {
    color: var(--oscuro); /*This is the normal way to access to one personalize property*/
    font-size: 2.2rem;
    text-decoration: none;
    margin-bottom: 2rem;
}

.site-header nav a:last-child {
    margin-bottom: 0;
}

@media (min-width: 768px) {
    .site-header nav a {
        margin-bottom: 0;
    }
}

.hero {
    height: 45rem;
    background-image: url(../img/hero.jpg);
    position: relative;
    display: flex;
    justify-content: center; /* Flex-row: Center elements in right to left direction
    Flex-column: Center elements from up to bottom direction */
    align-items: center; /* Flex-column: Center elements in right to left direction
    Flex-row: Center elements from up to bottom direction */
}

.hero::after {
    content: '';
    background-color: rgba(0, 0, 0, 0.7);
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}
/* .hero::after creates a new element with background-color and positionated over the original element */

.contenedor-hero {
    text-align: center;
    position: relative;
    color: #fff;
    z-index: 1;
}

.contenedor-hero i {
    font-size: 5rem;
    color: var(--primario);
}

.button {
    background-color: var(--secundario);
    color: #fff;
    text-decoration: none;
    font-weight: 700;
    font-size: 2rem;
    padding: 1rem 5rem;
    display: inline-block;
    margin-top: 1rem;
    border-radius: 0.5rem;
    text-transform: uppercase;
    border: none;
}

.button:hover{
    cursor: pointer;
}

.contenedor {
    max-width: 1200px;
    margin: 0 auto;
    background-color: #fff;
    padding: 3rem;
    border-radius: 1rem;
    margin: 3rem auto;
    box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.7);
}

.contenedor-servicios {
    margin-top: 2rem;
}

@media (min-width: 768px) {
    .contenedor-servicios {
        display: flex;
        justify-content: space-between;
    }

    .servicio {
        flex: 0 0 calc(33.3% - 1rem);
    }
}

/* flex: value1 value2 value3;
    Value1: Represents the growth factor, this value distribute the width to every element inside the flex element, if the value is 1 every element will have the same width, if one of them has 2 the flex element will be divided in one more element besides the ones that already has, for example if the flex element has 3 sons elements then with the value of 1 to every of those elements means to divide the flex element in 3 parts but if one of their sons has 2 then the flex element will be divided in the next way: first son 1, sencond son 1 and third son 2, so 1 + 1 + 2 = 4, concluiding the division in 4.

    Value3: Represents the base of the element, here it is possible to declare a max width or max grouth in our flex element son, in this way every element should have this size as max. Note. This value works if the other two values are 0.
*/

.servicio {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.iconos {
    width: 100px;
    height: 100px;
    background-color: var(--primario);
    border-radius: 50%;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    font-size: 3rem;
    margin-top: 2rem;
}

form {
    background-color: var(--gris);
    padding: 2rem;
    border-radius: 1rem;
    margin-top: 3rem;
}

form legend {
    text-align: center;
    font-size: 2rem;
    color: var(--primario);
    margin: 3rem 0;
}

@media (min-width: 768px) {
    form {
        max-width: 800px;
        margin: 3rem auto;
    }

    .contenedor-campos {
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
    }

    .campo {
        flex: 0 0 calc(50% - 1rem);
    }
}

.campo {
    display: flex;
    margin-bottom: 2rem;
    
}

.campo label {
    flex: 0 0 90px;
    padding-top: .5rem;
    color: #fff;
}

.campo input {
    flex: 1;
    height: 4rem;
}

.campo textarea {
    flex: 1;
    height: 6rem;
}

.w-100 {
    flex: 0 0 100%;
}

.enviar {
    display: flex;
    justify-content: flex-end;
}

